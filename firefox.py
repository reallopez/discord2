import os
import sqlite3
import argparse

# Configura o argumento para salvar os cookies em um arquivo JSON
parser = argparse.ArgumentParser()
parser.add_argument("-j", "--json", action='store_true', help="Save cookies as a JSON file")   
args = parser.parse_args()

# Diretórios e variáveis de ambiente
ROAMING = os.environ["APPDATA"]
PROFILES = "\\Mozilla\\Firefox\\Profiles"
PWD = os.getcwd()

os.chdir(ROAMING + PROFILES)

# Função para contar os cookies
def CookiesCount(profile):
    connection = sqlite3.connect("cookies.sqlite")
    cursor = connection.cursor()

    count_query = cursor.execute("SELECT COUNT(name) FROM moz_cookies").fetchall()
    cookies_count = str(count_query).replace("(", "").replace(",)", "")[1:-1]

    print(f"[+] Successfully retrieved {cookies_count} cookies from profile: {profile}")

# Função para salvar os cookies em um arquivo JSON
def SaveToJSONFile(profile):
    connection = sqlite3.connect("cookies.sqlite")
    cursor = connection.cursor()

    file_name = os.path.join(PWD, f"cookies_{profile}.json")

    with open(file_name, "w") as f:
        f.write("[\n")

        q = open(os.path.join(PWD, "query.txt"), "r")
        query_from_file = q.readline()

        for name in cursor.execute(query_from_file):
            f.write(''.join(name) + ",\n")
        f.write("]\n")

    CookiesCount(profile)
    print(f"[+] Cookies saved to: {file_name}")

# Função para salvar os cookies em um arquivo de texto no formato correto
def SaveToTextFile(profile):
    connection = sqlite3.connect("cookies.sqlite")
    cursor = connection.cursor()

    file_name = os.path.join(PWD, f"cookies_{profile}.txt")

    with open(file_name, "w") as f:
        f.write("# Netscape HTTP Cookie File\n")
        f.write("# This file was generated by a script\n")
        f.write("#\n")
        f.write("# Format: domain | flag | path | secure | expiration | name | value\n")

        query = cursor.execute("SELECT host, isSecure, path, expiry, name, value FROM moz_cookies")
        for cookie in query.fetchall():
            domain = cookie[0]
            flag = "TRUE" if domain.startswith(".") else "FALSE"
            path = cookie[2]
            secure = "TRUE" if cookie[1] else "FALSE"
            expiry = cookie[3]
            name = cookie[4]
            value = cookie[5]
            f.write(f"{domain}\t{flag}\t{path}\t{secure}\t{expiry}\t{name}\t{value}\n")

    CookiesCount(profile)
    print(f"[+] Cookies saved to: {file_name}")

# Loop para percorrer os perfis e salvar os cookies
for profile in os.listdir():
    profile_path = os.path.join(ROAMING + PROFILES, profile)
    
    if os.path.isdir(profile_path):
        try:
            os.chdir(profile_path)

            if "cookies.sqlite" in os.listdir():
                if args.json:
                    SaveToJSONFile(profile)
                else:
                    SaveToTextFile(profile)

        except Exception as e:
            print(f"[-] Couldn't retrieve cookies for profile: {profile} - {e}")

    os.chdir(ROAMING + PROFILES)
